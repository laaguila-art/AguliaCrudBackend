================================================================================
POSTMAN TESTING GUIDE - DevVEla API on Render
================================================================================
Base URL: https://crudadet.onrender.com

================================================================================
STEP 1: CREATE ENVIRONMENT IN POSTMAN
================================================================================
1. Click "Environments" in left sidebar
2. Click "+" to create new environment
3. Name it: "Render - DevVEla"
4. Add these variables:
   - Variable: base_url
     Value: https://crudadet.onrender.com
   
   - Variable: token
     Value: (leave empty - will be filled after login)

5. Click "Save"
6. Select this environment from dropdown (top right)

================================================================================
STEP 2: SIGNUP - CREATE NEW USER
================================================================================
Method: POST
URL: {{base_url}}/auth/signup

Headers:
  Content-Type: application/json

Body (raw JSON):
{
  "username": "testuser",
  "password": "password123",
  "email": "test@example.com",
  "firstName": "Test",
  "lastName": "User"
}

Expected Response (201 Created):
{
  "id": 1,
  "username": "testuser",
  "email": "test@example.com",
  "firstName": "Test",
  "lastName": "User",
  "createdAt": "2025-10-21T14:30:00.000Z",
  "updatedAt": "2025-10-21T14:30:00.000Z"
}

================================================================================
STEP 3: LOGIN - GET JWT TOKEN
================================================================================
Method: POST
URL: {{base_url}}/auth/login

Headers:
  Content-Type: application/json

Body (raw JSON):
{
  "username": "testuser",
  "password": "password123"
}

Expected Response (200 OK):
{
  "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
  "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
}

IMPORTANT: 
1. COPY the "accessToken" from response
2. Go to Environments → Click your environment
3. Paste token into "token" variable value
4. Click "Save"

================================================================================
STEP 4: CREATE POSITION
================================================================================
Method: POST
URL: {{base_url}}/positions

Headers:
  Content-Type: application/json
  Authorization: Bearer {{token}}

Body (raw JSON):
{
  "positionCode": "DEV001",
  "positionName": "Senior Developer"
}

Expected Response (201 Created):
{
  "position_id": 1,
  "position_code": "DEV001",
  "position_name": "Senior Developer",
  "created_at": "2025-10-21T14:35:00.000Z",
  "updated_at": "2025-10-21T14:35:00.000Z"
}

================================================================================
STEP 5: GET ALL POSITIONS
================================================================================
Method: GET
URL: {{base_url}}/positions

Headers:
  Authorization: Bearer {{token}}

Expected Response (200 OK):
[
  {
    "position_id": 1,
    "position_code": "DEV001",
    "position_name": "Senior Developer",
    "created_at": "2025-10-21T14:35:00.000Z",
    "updated_at": "2025-10-21T14:35:00.000Z"
  }
]

================================================================================
STEP 6: GET SINGLE POSITION
================================================================================
Method: GET
URL: {{base_url}}/positions/1

Headers:
  Authorization: Bearer {{token}}

Expected Response (200 OK):
{
  "position_id": 1,
  "position_code": "DEV001",
  "position_name": "Senior Developer",
  "created_at": "2025-10-21T14:35:00.000Z",
  "updated_at": "2025-10-21T14:35:00.000Z"
}

================================================================================
STEP 7: UPDATE POSITION
================================================================================
Method: PATCH
URL: {{base_url}}/positions/1

Headers:
  Content-Type: application/json
  Authorization: Bearer {{token}}

Body (raw JSON):
{
  "positionCode": "DEV002",
  "positionName": "Lead Developer"
}

Expected Response (200 OK):
{
  "position_id": 1,
  "position_code": "DEV002",
  "position_name": "Lead Developer",
  "created_at": "2025-10-21T14:35:00.000Z",
  "updated_at": "2025-10-21T14:40:00.000Z"
}

================================================================================
STEP 8: DELETE POSITION
================================================================================
Method: DELETE
URL: {{base_url}}/positions/1

Headers:
  Authorization: Bearer {{token}}

Expected Response (200 OK):
{
  "message": "Position deleted successfully"
}

================================================================================
IMPORTANT NOTES
================================================================================
1. Token Expiry: Access tokens expire after 15 minutes
   - If you get "401 Unauthorized", re-login to get new token

2. Cold Start (Free Tier): First request may take 30-60 seconds
   - Render free tier spins down after 15 minutes of inactivity
   - Be patient on first request

3. Authorization Header: ALL positions endpoints require:
   Authorization: Bearer {{token}}

4. Test Order: Follow steps 1-8 in sequence for smooth testing

5. Multiple Users: You can create multiple users with different usernames

================================================================================
TROUBLESHOOTING
================================================================================
Error: 401 Unauthorized
  → Token expired or missing
  → Solution: Re-login (Step 3) and update token in environment

Error: 500 Internal Server Error
  → Check Render logs for database connection issues
  → Verify environment variables are set correctly

Error: 404 Not Found
  → Position ID doesn't exist
  → Solution: Use valid position_id from GET all positions

Error: Request timeout
  → Free tier cold start (first request)
  → Solution: Wait 30-60 seconds and retry

================================================================================
QUICK REFERENCE - ALL ENDPOINTS
================================================================================
Authentication:
  POST   /auth/signup    - Create new user
  POST   /auth/login     - Get JWT tokens

Positions (Protected):
  POST   /positions      - Create position
  GET    /positions      - Get all positions
  GET    /positions/:id  - Get single position
  PATCH  /positions/:id  - Update position
  DELETE /positions/:id  - Delete position

================================================================================
END OF GUIDE
================================================================================
